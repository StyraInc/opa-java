/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.styra.opa.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import com.styra.opa.openapi.utils.SpeakeasyMetadata;
import com.styra.opa.openapi.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class ExecuteDefaultPolicyWithInputRequest {

    /**
     * If parameter is `true`, response will formatted for humans.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pretty")
    private Optional<? extends Boolean> pretty;

    /**
     * The input document
     */
    @SpeakeasyMetadata("request:mediaType=application/json")
    private com.styra.opa.openapi.models.shared.Input input;

    @JsonCreator
    public ExecuteDefaultPolicyWithInputRequest(
            Optional<? extends Boolean> pretty,
            com.styra.opa.openapi.models.shared.Input input) {
        Utils.checkNotNull(pretty, "pretty");
        Utils.checkNotNull(input, "input");
        this.pretty = pretty;
        this.input = input;
    }
    
    public ExecuteDefaultPolicyWithInputRequest(
            com.styra.opa.openapi.models.shared.Input input) {
        this(Optional.empty(), input);
    }

    /**
     * If parameter is `true`, response will formatted for humans.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Boolean> pretty() {
        return (Optional<Boolean>) pretty;
    }

    /**
     * The input document
     */
    @JsonIgnore
    public com.styra.opa.openapi.models.shared.Input input() {
        return input;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * If parameter is `true`, response will formatted for humans.
     */
    public ExecuteDefaultPolicyWithInputRequest withPretty(boolean pretty) {
        Utils.checkNotNull(pretty, "pretty");
        this.pretty = Optional.ofNullable(pretty);
        return this;
    }

    /**
     * If parameter is `true`, response will formatted for humans.
     */
    public ExecuteDefaultPolicyWithInputRequest withPretty(Optional<? extends Boolean> pretty) {
        Utils.checkNotNull(pretty, "pretty");
        this.pretty = pretty;
        return this;
    }

    /**
     * The input document
     */
    public ExecuteDefaultPolicyWithInputRequest withInput(com.styra.opa.openapi.models.shared.Input input) {
        Utils.checkNotNull(input, "input");
        this.input = input;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExecuteDefaultPolicyWithInputRequest other = (ExecuteDefaultPolicyWithInputRequest) o;
        return 
            java.util.Objects.deepEquals(this.pretty, other.pretty) &&
            java.util.Objects.deepEquals(this.input, other.input);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            pretty,
            input);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ExecuteDefaultPolicyWithInputRequest.class,
                "pretty", pretty,
                "input", input);
    }
    
    public final static class Builder {
 
        private Optional<? extends Boolean> pretty = Optional.empty();
 
        private com.styra.opa.openapi.models.shared.Input input;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * If parameter is `true`, response will formatted for humans.
         */
        public Builder pretty(boolean pretty) {
            Utils.checkNotNull(pretty, "pretty");
            this.pretty = Optional.ofNullable(pretty);
            return this;
        }

        /**
         * If parameter is `true`, response will formatted for humans.
         */
        public Builder pretty(Optional<? extends Boolean> pretty) {
            Utils.checkNotNull(pretty, "pretty");
            this.pretty = pretty;
            return this;
        }

        /**
         * The input document
         */
        public Builder input(com.styra.opa.openapi.models.shared.Input input) {
            Utils.checkNotNull(input, "input");
            this.input = input;
            return this;
        }
        
        public ExecuteDefaultPolicyWithInputRequest build() {
            return new ExecuteDefaultPolicyWithInputRequest(
                pretty,
                input);
        }
    }
}

