/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.styra.opa.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.styra.opa.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class Revision {

    @JsonProperty("revision")
    private String revision;

    public Revision(
            @JsonProperty("revision") String revision) {
        Utils.checkNotNull(revision, "revision");
        this.revision = revision;
    }

    public String revision() {
        return revision;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public Revision withRevision(String revision) {
        Utils.checkNotNull(revision, "revision");
        this.revision = revision;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Revision other = (Revision) o;
        return 
            java.util.Objects.deepEquals(this.revision, other.revision);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            revision);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Revision.class,
                "revision", revision);
    }
    
    public final static class Builder {
 
        private String revision;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder revision(String revision) {
            Utils.checkNotNull(revision, "revision");
            this.revision = revision;
            return this;
        }
        
        public Revision build() {
            return new Revision(
                revision);
        }
    }
}

