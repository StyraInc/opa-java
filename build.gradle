
plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'cl.franciscosolis.sonatype-central-upload' version '1.0.0'
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
    withJavadocJar()
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/pom.xml")
    }
}

jar {
    dependsOn(":generatePomFileForMavenPublication")
    archiveBaseName = "openapi"

    into("META-INF/maven/com.styra.opa/openapi") {
        from("$buildDir/pom.xml")
    }
}

javadoc {
    options.encoding = "UTF-8"

    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}


tasks.withType(Javadoc) {
  failOnError false
  options.addStringOption('Xdoclint:none', '-quiet')
}
group = "com.styra.opa"
version = "0.6.4"

sourcesJar {
    archiveBaseName = "openapi"
}

javadocJar {
    archiveBaseName = "openapi"
}

sonatypeCentralUpload {
    // This is your Sonatype generated username
    username = System.getenv("SONATYPE_USERNAME")
    // This is your sonatype generated password
    password = System.getenv("SONATYPE_PASSWORD")

    // This is a list of files to upload. Ideally you would point to your jar file, source and javadoc jar (required by central)
    archives = files(
      "$buildDir/libs/openapi-${version}.jar",
      "$buildDir/libs/openapi-${version}-sources.jar",
      "$buildDir/libs/openapi-${version}-javadoc.jar"
    )

    // This is the pom file to upload. This is required by central
    pom = file("$buildDir/pom.xml")

    // This is your PGP private key. This is required to sign your files
    signingKey = System.getenv("SONATYPE_SIGNING_KEY")
    // This is your PGP private key passphrase to decrypt your private key
    signingKeyPassphrase = System.getenv("SIGNING_KEY_PASSPHRASE")
}
publishing {

    publications {
        maven(MavenPublication) {
            groupId = 'com.styra.opa'
            artifactId = 'openapi'
            version = '0.6.4'

            from components.java

            pom {
                name = 'Styra Java SDK'
                description = 'SDK enabling Java developers to easily integrate with the Styra API.'
                url = 'https://github.com/styrainc/opa-java'
                scm {
                    url = 'github.com/styrainc/opa-java'
                    connection = 'scm:git:ssh://git@github.com/styrainc/opa-java.git'
                }
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://mit-license.org/'
                    }
                }
                developers {
                    developer {
                        name = 'Styra'
                        organization = 'Styra'
                        email = 'devrel@styra.com'
                    }
                }
                organization {
                    name = 'Styra'
                    url = 'www.styra.com'
                }
            }
        }
    }
}

if (!project.hasProperty('skip.signing')) {
    signing {
        def signingKey = findProperty("signingKey")
        def signingPassphrase = findProperty("signingPassphrase")
        useInMemoryPgpKeys(signingKey, signingPassphrase)
        sign publishing.publications.maven
    }
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.17.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.apache.httpcomponents:httpmime:4.5.14'
    implementation 'com.jayway.jsonpath:json-path:2.9.0'
    implementation 'commons-io:commons-io:2.15.1'
}


