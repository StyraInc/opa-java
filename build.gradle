
plugins {
    // NOTE: this block is managed by scripts/fix-build-gradle.sh, changes made
    // to the plugins block by hand will be overwritten!
    id 'java-library'
    id 'java'
    id "nebula.lint" version "17.8.0"
    id 'checkstyle'
    id 'maven-publish'
    id 'signing'
}





compileJava.options.encoding = "UTF-8"
compileJava.options.compilerArgs += '-Xlint:unchecked'
compileTestJava.options.encoding = "UTF-8"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
    withJavadocJar()
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/pom.xml")
    }
}

jar {
    dependsOn(":generatePomFileForMavenPublication")

    into("META-INF/maven/com.styra/opa") {
        from("$buildDir/pom.xml")
    }
}

javadoc {
    options.encoding = "UTF-8"

    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}


tasks.withType(Javadoc) {
  failOnError false
  options.addStringOption('Xdoclint:none', '-quiet')
}
publishing {
    repositories {
        maven {
            name = "OSSRH"
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
          }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = 'com.styra'
            artifactId = 'opa'
            version = '0.7.2'

            from components.java

            pom {
                name = 'Styra Java SDK'
                description = 'SDK enabling Java developers to easily integrate with the Styra API.'
                url = 'https://github.com/styrainc/opa-java'
                scm {
                    url = 'github.com/styrainc/opa-java'
                    connection = 'scm:git:ssh://git@github.com/styrainc/opa-java.git'
                }
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://mit-license.org/'
                    }
                }
                developers {
                    developer {
                        name = 'Styra'
                        organization = 'Styra'
                        email = 'devrel@styra.com'
                    }
                }
                organization {
                    name = 'Styra'
                    url = 'www.styra.com'
                }
            }
        }
    }
}

if (!project.hasProperty('skip.signing')) {
    signing {
        def signingKey = findProperty("signingKey")
        def signingPassphrase = findProperty("signingPassphrase")
        useInMemoryPgpKeys(signingKey, signingPassphrase)
        sign publishing.publications.maven
    }
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.17.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.apache.httpcomponents:httpmime:4.5.14'
    implementation 'commons-io:commons-io:2.15.1'
}


// === build-footer ===
// NOTE: lines in build.gradle below this comment are managed by
// scripts/fix-build-gradle.sh and should not be managed by hand, as changes
// will be overwritten.

sourcesJar {
    archiveBaseName = "opa"
}

javadocJar {
    archiveBaseName = "opa"
}

tasks.withType(Javadoc) {
  autoLintGradle.enabled = false
  failOnError false
}

// https://discuss.gradle.org/t/how-to-exclude-checkstyle-task-from-build-task/6692/5
//
// This prevents Checkstyle from running on ./gradlew build, but keeps it
// working for ./gradlew lint.
checkstyle {
    sourceSets = []
}

// Exclude files generated by Speakeasy from linting.
tasks.withType(Checkstyle) {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    exclude 'com/styra/opa/openapi/**/*.java'
    exclude 'com/styra/opa/openapi/*.java'
}

task lint {
    autoLintGradle.enabled = true
    dependsOn checkstyleTest
    dependsOn checkstyleMain
    gradleLint {
        criticalRules=['all-dependency']
        reportFormat = 'text'
        excludedRules = [
            // Enabling recommended-versions causes Gradle to complain about
            // testcontainers, but applying the suggested fix (removing the version
            // numbers from all but one of the testImplementation lines) causes
            // gradle to fail in a more obscure way that I don't understand.
            "recommended-versions"
        ]
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    runtimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.testcontainers:testcontainers-bom:1.19.7'
    testImplementation 'org.testcontainers:testcontainers:1.19.7'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'

    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.0'
    implementation 'org.apache.httpcomponents:httpcore:4.4.16'
}

test {
    useJUnitPlatform()
    testLogging {
        // uncomment for more verbose output during development
        events "passed", "skipped", "failed", "standard_out", "standard_error"
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}
