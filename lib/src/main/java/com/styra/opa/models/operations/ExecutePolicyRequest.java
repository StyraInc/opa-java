/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.styra.opa.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.styra.opa.utils.SpeakeasyMetadata;


public class ExecutePolicyRequest {
    /**
     * The path separator is used to access values inside object and array documents. If the path indexes into an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, the server will respond with 404.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=path")
    public String path;

    public ExecutePolicyRequest withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Indicates the server should respond with a gzip encoded body. The server will send the compressed response only if its length is above `server.encoding.gzip.min_length` value. See the configuration section
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Accept-Encoding")
    public com.styra.opa.models.shared.GzipAcceptEncoding acceptEncoding;

    public ExecutePolicyRequest withAcceptEncoding(com.styra.opa.models.shared.GzipAcceptEncoding acceptEncoding) {
        this.acceptEncoding = acceptEncoding;
        return this;
    }
    
    /**
     * If parameter is `true`, response will formatted for humans.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pretty")
    public Boolean pretty;

    public ExecutePolicyRequest withPretty(Boolean pretty) {
        this.pretty = pretty;
        return this;
    }
    
    /**
     * If parameter is true, response will include build/version info in addition to the result.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=provenance")
    public Boolean provenance;

    public ExecutePolicyRequest withProvenance(Boolean provenance) {
        this.provenance = provenance;
        return this;
    }
    
    /**
     * Return query explanation in addition to result.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=explain")
    public com.styra.opa.models.shared.Explain explain;

    public ExecutePolicyRequest withExplain(com.styra.opa.models.shared.Explain explain) {
        this.explain = explain;
        return this;
    }
    
    /**
     * Return query performance metrics in addition to result.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=metrics")
    public Boolean metrics;

    public ExecutePolicyRequest withMetrics(Boolean metrics) {
        this.metrics = metrics;
        return this;
    }
    
    /**
     * Instrument query evaluation and return a superset of performance metrics in addition to result.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=instrument")
    public Boolean instrument;

    public ExecutePolicyRequest withInstrument(Boolean instrument) {
        this.instrument = instrument;
        return this;
    }
    
    /**
     * Treat built-in function call errors as fatal and return an error immediately.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=strict-builtin-errors")
    public Boolean strictBuiltinErrors;

    public ExecutePolicyRequest withStrictBuiltinErrors(Boolean strictBuiltinErrors) {
        this.strictBuiltinErrors = strictBuiltinErrors;
        return this;
    }
    
    public ExecutePolicyRequest(@JsonProperty("path") String path) {
        this.path = path;
  }
}
