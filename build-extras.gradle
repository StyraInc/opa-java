// This file 
// * is referred to in an `apply from` command in `build.gradle`
// * can be used to customise `build.gradle`
// * is generated once and not overwritten in SDK generation updates

sourcesJar {
    archiveBaseName = "opa"
}

javadocJar {
    archiveBaseName = "opa"
}

tasks.withType(Javadoc) {
  autoLintGradle.enabled = false
  failOnError false
}

// https://discuss.gradle.org/t/how-to-exclude-checkstyle-task-from-build-task/6692/5
//
// This prevents Checkstyle from running on ./gradlew build, but keeps it
// working for ./gradlew lint.
checkstyle {
    sourceSets = []
}

// Exclude files generated by Speakeasy from linting.
tasks.withType(Checkstyle) {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    exclude 'com/styra/opa/openapi/**/*.java'
    exclude 'com/styra/opa/openapi/*.java'
}

task lint {
    autoLintGradle.enabled = true
    dependsOn checkstyleTest
    dependsOn checkstyleMain
    gradleLint {
        criticalRules=['all-dependency']
        reportFormat = 'text'
        excludedRules = [
            // Enabling recommended-versions causes Gradle to complain about
            // testcontainers, but applying the suggested fix (removing the version
            // numbers from all but one of the testImplementation lines) causes
            // gradle to fail in a more obscure way that I don't understand.
            "recommended-versions"
        ]
    }
}

test {
    useJUnitPlatform()
    testLogging {
        // uncomment for more verbose output during development
        //events "passed", "skipped", "failed", "standard_out", "standard_error"
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}
